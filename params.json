{"name":"Jquerydeferredtimeoututilities","tagline":"this is jQueryDeferred utilities.","body":"#jQuery deferredTimeoutUtilities について\r\n##概要\r\nsetTimeout のjQuery.Deferred実装。setInterval等の時間関連関数を元としたjQuery.Deferred実装及びUtilityの jQuery plugin\r\n##用法\r\n    <script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./js/jquery.deferredTimeoutUtilities.js\"></script>\r\nで読み込んで実行してください。\r\n##関数仕様\r\n    $.deferredTimeout(time).done(function(){ /* action */});\r\nの様にDeferredを返す為、Deferredチェーンを行って使用します。\r\n尚、各関数には $. 版と $.fn. 版の両方があり、$.fn. 版だとDeferred呼び出し時のthis がその要素自身になります。\r\nまた、setTimeout、setIntervalを使用する都合上、clearTimeout、clearIntervalを行う為に戻り値のDeferredはclear()という関数を持ち、それを実行することで強制的にrejectされます。\r\n###.deferredTimeout(time)\r\n言わずもがなな setTimeout(callback,time) の Deferred 実装。time(ms)後にresolve,キャンセルされると reject する。\r\nこれをインターフェースとして別実装が幾つか用意されている\r\n###.deferredIntervalTimeout(time)\r\n.deferredTimeout インターフェース を setInterval() を利用して実装した物。厳密なタイミングが設定出来るのはポイント。\r\n###.deferredFrameTimeout(time)\r\n.deferredTimeout インターフェース を requestAnimationFrame(callback) を利用してを実装した物。フレーム更新間隔に合わせて呼ばれる為、画面更新の際に使える。\r\n###.deferredInterval(time)\r\n言わずもがなな setInterval(callback,time) の Deferred 実装。time(ms)経つとnofity,キャンセルされると rejectする。\r\nこれをインターフェースとして別実装が幾つか用意されている\r\n###.deferredTimeoutInterval(time)\r\n.deferredInterval インターフェース を setTimeout() を利用して実装した物。.deferredInterval() の様に時間に正確ではないが、無理の無い実行が利点。\r\n###.deferredFrameInterval(time)\r\n.deferredTimeout インターフェース を requestAnimationFrame(callback) を利用して実装した物。フレーム更新間隔に合わせて呼ばれる為、画面更新の際に使える。\r\n###.deferredEach(arry,fn(key,value))\r\n.eachをDeferred対応させた物。\r\nコールバック関数の戻り値としてはfalseかjQuery.Deferred.Promiseオブジェクトを使用する事が出来る。falseを使用した場合は即時途中キャンセルとされ、rejectされる。fnの戻り値としてjQuery.Deferred.Promiseオブジェクトを使用した場合、rejecされるとキャンセルされ、resolveされると続行する。\r\nまた、jQueryの要素から呼ばれる場合は第一引数を不要とする。(※例: $(elms).dferredEach(function(k,v){/* action */}).done(function(){/* ok action */}))\r\n尚、戻り値のjQuery.Deferred.Promiseオブジェクトには clear関数が設定されており、それを実行することでも強制的にrejectしてループを終わらせることが出来る。\r\n###.deferredMap(arry,fn(value,key))\r\n.mapをDeferred対応させた物。 コールバック関数の戻り値として、指定なしと値、jQuery.Deferred.Promiseオブジェクトを使用する事が出来る。戻り値がある場合はその戻り値を配列に追加する。戻り値がDeferred.Promise だった場合はそれのresolve時の引数を配列に追加する。実際の引数に対しての動作に関しては $.when と同等であるが、完了時の引数は全ての戻り値を再配列化(もしも配列が返された時はその配列一つ一つを要素として全体の配列に追加する)して第一引数に設定したresolveを行う。\r\n尚、戻り値のjQuery.Deferred.Promiseオブジェクトには clear関数が設定されており、それを実行することでも強制的にrejectしてループを終わらせることが出来る。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}